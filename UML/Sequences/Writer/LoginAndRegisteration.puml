
@startuml
!theme vibrant

title Sequence Diagram: User Login

actor "Writer" as User
participant "Browser" as Browser
participant "API Gateway" as Gateway
participant "Auth Service" as AuthService
database "UserDB" as UserDB
participant "Logging Service" as LoggingService

activate Browser
User -> Browser : Navigates to PageByPage website and chooses to Login

Browser -> User : Displays Login Form
User -> Browser : Enters email and password
Browser ->> Gateway : POST /api/users/login\n(email, password)
activate Gateway

Gateway ->> AuthService : login(email, password)
activate AuthService

AuthService ->> UserDB : findUserByEmail(email)
activate UserDB
UserDB -->> AuthService : User Document or null
deactivate UserDB

alt User details are valid
    AuthService -> AuthService : Compare hashed password
    alt Password is correct
        AuthService -> AuthService : Create secure JWT
        AuthService -->> Gateway : 200 OK { jwt: "..." }

        ' Asynchronous Logging
        AuthService ->> LoggingService : logEvent('USER_LOGIN', {userId})
        activate LoggingService
        deactivate LoggingService

        Gateway -->> Browser : 200 OK
        Browser -> Browser : Store JWT and redirect to dashboard
        Browser -> User : Displays Dashboard
    else Password is incorrect
        AuthService -->> Gateway : 401 Unauthorized
        Gateway -->> Browser : 401 Unauthorized
        Browser -> User : Display error: "Incorrect email or password"
    end
else User does not exist
    AuthService -->> Gateway : 404 Not Found
    Gateway -->> Browser : 404 Not Found
    Browser -> User : Display error: "User not found, please register"
end
deactivate AuthService
deactivate Gateway
activate Browser

@enduml
