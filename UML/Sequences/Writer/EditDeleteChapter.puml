@startuml
!theme vibrant

title Sequence Diagram: Chapter Management (Create, Edit, Delete, Reorder)

actor "User"
participant "Browser"
participant "API Gateway" as Gateway
participant "Chapter Service" as ChapterService
database "ChapterDB"

User -> Browser : Navigates to a specific book's page
' ... The list of chapters for the book is fetched and displayed ...
Browser -> User : Displays list of chapters

alt User chooses to Create a New Chapter

    User -> Browser : Clicks "Add New Chapter"
    Browser -> User : Displays input field for chapter name
    User -> Browser : Enters name and clicks "Create"
    Browser ->> Gateway : POST /api/v1/books/{bookId}/chapters\n(Authorization: Bearer JWT, {name: "..."})
    activate Gateway

    Gateway ->> ChapterService : createChapter(userId, bookId, chapterData)
    activate ChapterService

    alt Chapter name is valid (not empty)
        ChapterService ->> ChapterDB : save(newChapterDocument)
        activate ChapterDB
        DB -->> ChapterService : New Chapter Document
        deactivate ChapterDB
        ChapterService -->> Gateway : 201 Created { newChapter }
        Gateway -->> Browser : 201 Created
        Browser -> User : Displays "Chapter created" and adds it to the list
    else Chapter name is invalid
        ChapterService -->> Gateway : 400 Bad Request { error: "Chapter name cannot be empty" }
        Gateway -->> Browser : 400 Bad Request
        Browser -> User : Displays validation error
    end
    deactivate ChapterService
    deactivate Gateway

else User chooses to Edit a Chapter Name

    User -> Browser : Clicks "Edit name" on a chapter
    ' ... similar flow to create, but using PUT ...
    Browser ->> Gateway : PUT /api/v1/chapters/{chapterId}\n(Authorization: Bearer JWT, {name: "New Name"})
    ' ... server validates and updates ...
    Gateway -->> Browser : 200 OK
    Browser -> User : Displays "Chapter name updated"

else User chooses to Delete a Chapter

    User -> Browser : Clicks "Delete" on a chapter
    Browser -> User : Displays confirmation dialog
    User -> Browser : Clicks "Confirm"
    Browser ->> Gateway : DELETE /api/v1/chapters/{chapterId}\n(Authorization: Bearer JWT)
    ' ... server verifies permissions and deletes ...
    Gateway -->> Browser : 204 No Content
    Browser -> User : Displays "Chapter deleted" and removes it from list

else User chooses to Reorder Chapters (Drag & Drop)

    User -> Browser : Drags a chapter to a new position in the list
    note over Browser : On drop, browser prepares the new order
    Browser ->> Gateway : PUT /api/v1/books/{bookId}/chapters/order\n(Authorization: Bearer JWT, { chapterIds: ["id3", "id1", "id2"] })
    activate Gateway
    Gateway ->> ChapterService : reorderChapters(userId, bookId, orderedIds)
    activate ChapterService

    ChapterService -> ChapterService : Verify user has permission for book
    alt User has permission
        ChapterService ->> ChapterDB : update order for all chapters in list
        activate ChapterDB
        ChapterDB -->> ChapterService : Success
        deactivate ChapterDB
        ChapterService -->> Gateway : 200 OK
        Gateway -->> Browser : 200 OK
        Browser -> User : UI list is now permanently in the new order
    else User lacks permission
        ChapterService -->> Gateway : 403 Forbidden
        Gateway -->> Browser : 403 Forbidden
        Browser -> User : Displays error: "Could not reorder chapters"
    end
    deactivate ChapterService
    deactivate Gateway

end

@enduml
