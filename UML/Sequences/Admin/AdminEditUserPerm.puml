@startuml
!theme vibrant

title Sequence Diagram: Admin Edits User Details or Permissions

actor Admin
participant Browser
participant "API Gateway" as Gateway
participant "User Service" as UserService
database "UserDB"
participant "Logging Service" as LoggingService

activate Browser
Admin -> Browser : Selects user and submits 'Edit User' form\n(e.g., updated name, new role: "Manager")

Browser ->> Gateway : PUT /api/users/{userId}\n(headers: {Authorization: Bearer JWT}, body: {updatedData})
activate Gateway

Gateway -> Gateway : Verify JWT (ensure admin privileges)
Gateway -> Gateway : Check Modified User's admin 
Gateway ->> UserService : updateUserDetails(userId, updatedData)
activate UserService

UserService ->> UserDB : updateUserDetails(userId, updatedData)
activate UserDB
UserDB -->> UserService : Updated User Document
deactivate UserDB

alt User updated successfully
    UserService -->> Gateway : 200 OK { updatedUser }
    
    ' Asynchronous Logging
    
    UserService ->> LoggingService : logEvent('USER_UPDATED', {adminId, updatedUserId, changes})
    activate LoggingService
    deactivate LoggingService

else User not found
    UserService -->> Gateway : 404 Not Found
end

deactivate UserService
Gateway -->> Browser : Response (200 OK or 404)
deactivate Gateway

alt Update successful
    Browser -> Admin : Display "User updated successfully" message
else Update failed
    Browser -> Admin : Display error message
end
deactivate Browser

@enduml
